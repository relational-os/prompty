/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result, EventFragment } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export interface PromptyInterface extends utils.Interface {
  functions: {
    "create(string,uint256,uint128,uint128)": FunctionFragment;
    "currentPromptId()": FunctionFragment;
    "prompts(uint256)": FunctionFragment;
    "respond(uint256,string)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "create",
    values: [string, BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "currentPromptId",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "prompts",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "respond",
    values: [BigNumberish, string]
  ): string;

  decodeFunctionResult(functionFragment: "create", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "currentPromptId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "prompts", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "respond", data: BytesLike): Result;

  events: {
    "PromptCreated(uint256,address,string,uint256,uint256,uint128,uint128)": EventFragment;
    "PromptResponse(uint256,address,string)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "PromptCreated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PromptResponse"): EventFragment;
}

export type PromptCreatedEvent = TypedEvent<
  [BigNumber, string, string, BigNumber, BigNumber, BigNumber, BigNumber],
  {
    promptId: BigNumber;
    creator: string;
    prompt: string;
    startTime: BigNumber;
    endTime: BigNumber;
    minChars: BigNumber;
    maxChars: BigNumber;
  }
>;

export type PromptCreatedEventFilter = TypedEventFilter<PromptCreatedEvent>;

export type PromptResponseEvent = TypedEvent<
  [BigNumber, string, string],
  { promptId: BigNumber; responder: string; response: string }
>;

export type PromptResponseEventFilter = TypedEventFilter<PromptResponseEvent>;

export interface Prompty extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: PromptyInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    create(
      prompt: string,
      endTime: BigNumberish,
      minChars: BigNumberish,
      maxChars: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    currentPromptId(overrides?: CallOverrides): Promise<[BigNumber]>;

    prompts(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber, BigNumber] & {
        startTime: BigNumber;
        endTime: BigNumber;
        minChars: BigNumber;
        maxChars: BigNumber;
      }
    >;

    respond(
      promptId: BigNumberish,
      response: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  create(
    prompt: string,
    endTime: BigNumberish,
    minChars: BigNumberish,
    maxChars: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  currentPromptId(overrides?: CallOverrides): Promise<BigNumber>;

  prompts(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber, BigNumber, BigNumber] & {
      startTime: BigNumber;
      endTime: BigNumber;
      minChars: BigNumber;
      maxChars: BigNumber;
    }
  >;

  respond(
    promptId: BigNumberish,
    response: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    create(
      prompt: string,
      endTime: BigNumberish,
      minChars: BigNumberish,
      maxChars: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    currentPromptId(overrides?: CallOverrides): Promise<BigNumber>;

    prompts(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber, BigNumber] & {
        startTime: BigNumber;
        endTime: BigNumber;
        minChars: BigNumber;
        maxChars: BigNumber;
      }
    >;

    respond(
      promptId: BigNumberish,
      response: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "PromptCreated(uint256,address,string,uint256,uint256,uint128,uint128)"(
      promptId?: null,
      creator?: null,
      prompt?: null,
      startTime?: null,
      endTime?: null,
      minChars?: null,
      maxChars?: null
    ): PromptCreatedEventFilter;
    PromptCreated(
      promptId?: null,
      creator?: null,
      prompt?: null,
      startTime?: null,
      endTime?: null,
      minChars?: null,
      maxChars?: null
    ): PromptCreatedEventFilter;

    "PromptResponse(uint256,address,string)"(
      promptId?: null,
      responder?: null,
      response?: null
    ): PromptResponseEventFilter;
    PromptResponse(
      promptId?: null,
      responder?: null,
      response?: null
    ): PromptResponseEventFilter;
  };

  estimateGas: {
    create(
      prompt: string,
      endTime: BigNumberish,
      minChars: BigNumberish,
      maxChars: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    currentPromptId(overrides?: CallOverrides): Promise<BigNumber>;

    prompts(arg0: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    respond(
      promptId: BigNumberish,
      response: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    create(
      prompt: string,
      endTime: BigNumberish,
      minChars: BigNumberish,
      maxChars: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    currentPromptId(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    prompts(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    respond(
      promptId: BigNumberish,
      response: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
